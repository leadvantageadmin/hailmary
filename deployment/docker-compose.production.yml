services:
  postgres:
    image: postgis/postgis:15-3.4
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app_password
      POSTGRES_DB: app
    # ports:
      # - "5432:5432"  # Only accessible within Docker network
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d app"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  opensearch:
    image: opensearchproject/opensearch:2.14.0
    environment:
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=admin123!
      - DISABLE_INSTALL_DEMO_CONFIG=true
      - discovery.type=single-node
      - plugins.security.disabled=true
      - OPENSEARCH_JAVA_OPTS=-Xms1g -Xmx1g
    ulimits:
      memlock:
        soft: -1
        hard: -1
    # ports:
      # - "9200:9200"  # Only accessible within Docker network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 15s
      timeout: 5s
      retries: 10
    networks:
      - app-network

  redis:
    image: redis:7
    # ports:
      # - "6379:6379"  # Only accessible within Docker network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  web:
    build:
      context: ..
      dockerfile: apps/web/Dockerfile
    env_file: ./.env
    depends_on:
      postgres:
        condition: service_healthy
      opensearch:
        condition: service_healthy
      redis:
        condition: service_healthy
    # ports:
      # - "3000:3000"  # Only accessible via Nginx proxy
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - web
    networks:
      - app-network

  ingestor:
    build: ../apps/ingestor
    env_file: ./.env
    depends_on:
      postgres:
        condition: service_healthy
      opensearch:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../data:/data
    networks:
      - app-network

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge
