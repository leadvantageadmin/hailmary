# =============================================================================
# CDC Service - PostgreSQL to Elasticsearch Change Data Capture
# =============================================================================
# This service provides real-time synchronization between PostgreSQL and 
# Elasticsearch using PGSync with Redis for checkpointing.
# =============================================================================

services:
  # --------------------
  # 1. Elasticsearch
  # --------------------
  elasticsearch:
    image: elasticsearch:7.17.15
    container_name: hailmary-elasticsearch
    restart: unless-stopped
    environment:
      # Cluster Configuration
      - discovery.type=single-node
      - cluster.name=hailmary-elasticsearch-cluster
      - node.name=hailmary-elasticsearch-node
      
      # Memory Configuration
      - ES_JAVA_OPTS=-Xms2g -Xmx2g
      
      # Security Configuration
      - xpack.security.enabled=false
      - xpack.monitoring.collection.enabled=false
      
      # Performance Configuration
      - bootstrap.memory_lock=true
      - thread_pool.write.size=2
      - thread_pool.search.size=2
      - thread_pool.get.size=2
      
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    
    ports:
      - "${ELASTICSEARCH_PORT:-9200}:9200"
      - "${ELASTICSEARCH_TRANSPORT_PORT:-9300}:9300"
    
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
      - elasticsearch_logs:/usr/share/elasticsearch/logs
    
    deploy:
      resources:
        limits:
          memory: 3g
          cpus: '2.0'
        reservations:
          memory: 2g
          cpus: '1.0'
    
    networks:
      cdc-network:
      hailmary-network:
        aliases:
          - elasticsearch
    
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    
    deploy:
      resources:
        limits:
          memory: 2g
          cpus: '1.0'
        reservations:
          memory: 1g
          cpus: '0.5'

  # --------------------
  # 2. Redis (for PGSync Checkpoint)
  # --------------------
  redis:
    image: redis:7-alpine
    container_name: hailmary-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    
    ports:
      - "6380:6379"
    
    volumes:
      - redis_data:/data
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf:ro
    
    networks:
      - cdc-network
    
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    
    deploy:
      resources:
        limits:
          memory: 512m
          cpus: '0.5'
        reservations:
          memory: 256m
          cpus: '0.25'

  # --------------------
  # 3. PGSync
  # --------------------
  pgsync:
    image: toluaina1/pgsync:latest
    container_name: hailmary-pgsync
    restart: unless-stopped
    
    volumes:
      - ./config/schema.json:/app/schema.json:ro
      - pgsync_logs:/app/logs
    
    environment:
      # PostgreSQL Configuration
      PG_HOST: ${PG_HOST:-hailmary-postgres}
      PG_PORT: ${PG_PORT:-5432}
      PG_DATABASE: ${PG_DATABASE:-app}
      PG_USER: ${PG_USER:-app}
      PG_PASSWORD: ${PG_PASSWORD:-app}
      
      # Elasticsearch Configuration
      ELASTICSEARCH_HOST: elasticsearch
      ELASTICSEARCH_PORT: 9200
      ELASTICSEARCH_USE_SSL: "false"
      ELASTICSEARCH_VERIFY_CERTS: "false"
      ELASTICSEARCH_TIMEOUT: 30
      
      # Redis Configuration
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_CHECKPOINT: "true"
      REDIS_TIMEOUT: 10
      
      # PGSync Configuration
      PGSYNC_LOG_LEVEL: ${PGSYNC_LOG_LEVEL:-INFO}
      PGSYNC_BATCH_SIZE: ${PGSYNC_BATCH_SIZE:-1000}
      PGSYNC_FLUSH_INTERVAL: ${PGSYNC_FLUSH_INTERVAL:-1}
    
    entrypoint: ["pgsync"]
    command: ["-c", "/app/schema.json", "-d", "-b"]
    
    depends_on:
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    
    deploy:
      resources:
        limits:
          memory: 2g
          cpus: '2.0'
        reservations:
          memory: 1g
          cpus: '1.0'
    
    networks:
      - cdc-network
      - hailmary-network
    
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f python3.11 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    
    deploy:
      resources:
        limits:
          memory: 1g
          cpus: '1.0'
        reservations:
          memory: 512m
          cpus: '0.5'

# =============================================================================
# Volumes
# =============================================================================
volumes:
  elasticsearch_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/data/elasticsearch
  
  elasticsearch_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/logs/elasticsearch
  
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/data/redis
  
  pgsync_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/logs/pgsync

# =============================================================================
# Networks
# =============================================================================
networks:
  cdc-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16
  
  hailmary-network:
    external: true