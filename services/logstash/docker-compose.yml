# Logstash Service Docker Compose Configuration
# PostgreSQL to Elasticsearch data synchronization service

version: '3.8'

services:
  logstash:
    build: .
    container_name: hailmary-logstash
    restart: unless-stopped
    
    environment:
      # PostgreSQL Configuration
      POSTGRES_HOST: ${POSTGRES_HOST:-hailmary-postgres}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_DB: ${POSTGRES_DB:-app}
      POSTGRES_USER: ${POSTGRES_USER:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-app}
      
      # Elasticsearch Configuration
      ELASTICSEARCH_HOST: ${ELASTICSEARCH_HOST:-hailmary-elasticsearch}
      ELASTICSEARCH_PORT: ${ELASTICSEARCH_PORT:-9200}
      ELASTICSEARCH_USE_SSL: ${ELASTICSEARCH_USE_SSL:-false}
      ELASTICSEARCH_VERIFY_CERTS: ${ELASTICSEARCH_VERIFY_CERTS:-false}
      ELASTICSEARCH_USERNAME: ${ELASTICSEARCH_USERNAME:-}
      ELASTICSEARCH_PASSWORD: ${ELASTICSEARCH_PASSWORD:-}
      
      # Logstash Configuration
      LOGSTASH_PORT: ${LOGSTASH_PORT:-5044}
      LOGSTASH_HTTP_PORT: ${LOGSTASH_HTTP_PORT:-9600}
      LOGSTASH_PIPELINE_WORKERS: ${LOGSTASH_PIPELINE_WORKERS:-2}
      LOGSTASH_PIPELINE_BATCH_SIZE: ${LOGSTASH_PIPELINE_BATCH_SIZE:-1000}
      LOGSTASH_PIPELINE_BATCH_DELAY: ${LOGSTASH_PIPELINE_BATCH_DELAY:-50}
      
      # Sync Configuration
      SYNC_INTERVAL: ${SYNC_INTERVAL:-30}
      MATERIALIZED_VIEW_REFRESH_INTERVAL: ${MATERIALIZED_VIEW_REFRESH_INTERVAL:-60}
      CHECKPOINT_RETENTION_DAYS: ${CHECKPOINT_RETENTION_DAYS:-7}
      
      # Schema Service Integration
      GITHUB_REPO: ${GITHUB_REPO:-leadvantageadmin/hailmary-schema}
      SCHEMA_VERSION: ${SCHEMA_VERSION:-latest}
      GITHUB_TOKEN: ${GITHUB_TOKEN:-}
      
      # Data Paths
      LOGS_PATH: /usr/share/logstash/data/logs
      SCHEMA_PATH: /usr/share/logstash/data/schema
      CHECKPOINT_PATH: /usr/share/logstash/data/checkpoints
      
      # Timezone
      TZ: ${TZ:-UTC}
    
    ports:
      - "${LOGSTASH_HTTP_PORT:-9600}:9600"
      - "${LOGSTASH_PORT:-5044}:5044"
    
    volumes:
      # Configuration files
      - ./config:/usr/share/logstash/config:ro
      
      # Data directories
      - logstash_logs:/usr/share/logstash/data/logs
      - logstash_schema:/usr/share/logstash/data/schema
      - logstash_checkpoints:/usr/share/logstash/data/checkpoints
      
      # PostgreSQL JDBC driver
      - ./postgresql-42.7.1.jar:/usr/share/logstash/logstash-core/lib/jars/postgresql-42.7.1.jar:ro
    
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9600/_node/stats || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    
    networks:
      - hailmary-network
    
    deploy:
      resources:
        limits:
          memory: 2g
          cpus: '2.0'
        reservations:
          memory: 1g
          cpus: '1.0'

  # Materialized View Refresh Service
  materialized-refresh:
    image: postgres:15-alpine
    container_name: hailmary-materialized-refresh
    restart: unless-stopped
    
    environment:
      # PostgreSQL Configuration
      POSTGRES_HOST: ${POSTGRES_HOST:-hailmary-postgres}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_DB: ${POSTGRES_DB:-app}
      POSTGRES_USER: ${POSTGRES_USER:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-app}
      
      # Refresh Configuration
      REFRESH_INTERVAL: ${MATERIALIZED_VIEW_REFRESH_INTERVAL:-60}
      
      # Timezone
      TZ: ${TZ:-UTC}
    
    volumes:
      - ./scripts/materialized-refresh.sh:/app/materialized-refresh.sh
      - materialized_logs:/app/logs
    
    command: ["sh", "/app/materialized-refresh.sh"]
    
    networks:
      - hailmary-network
    
    depends_on:
      - logstash

volumes:
  logstash_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/data/logs
  
  logstash_schema:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/data/schema
  
  logstash_checkpoints:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/data/checkpoints
  
  materialized_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/data/logs

networks:
  hailmary-network:
    external: true
