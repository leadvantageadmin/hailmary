# Materialized View Pipeline Configuration
# Syncs company_prospect_view materialized view data to Elasticsearch

input {
  jdbc {
    # Database connection
    jdbc_driver_library => "/usr/share/logstash/logstash-core/lib/jars/postgresql-42.7.1.jar"
    jdbc_driver_class => "org.postgresql.Driver"
    jdbc_connection_string => "jdbc:postgresql://${POSTGRES_HOST:-hailmary-postgres}:${POSTGRES_PORT:-5432}/${POSTGRES_DB:-app}"
    jdbc_user => "${POSTGRES_USER:-app}"
    jdbc_password => "${POSTGRES_PASSWORD:-app}"
    
    # Query configuration - query the materialized view directly
    statement => "SELECT * FROM company_prospect_view WHERE last_updated > :sql_last_value ORDER BY last_updated"
    use_column_value => true
    tracking_column => "last_updated"
    tracking_column_type => "timestamp"
    last_run_metadata_path => "/usr/share/logstash/data/checkpoints/materialized_last_run"
    
    # Scheduling - Using cron format for Logstash 7.x
    schedule => "*/60 * * * * *"
    
    # Connection settings
    jdbc_validate_connection => true
    jdbc_pool_timeout => 60
    
    # Cleanup
    clean_run => false
    record_last_run => true
  }
}

filter {
  # Add metadata
  mutate {
    add_field => { 
      "sync_source" => "materialized_view"
      "sync_timestamp" => "%{@timestamp}"
    }
  }
  
  # Convert timestamps
  date {
    match => [ "company_createdAt", "ISO8601" ]
    target => "company_createdAt"
  }
  
  date {
    match => [ "company_updatedAt", "ISO8601" ]
    target => "company_updatedAt"
  }
  
  date {
    match => [ "prospect_createdAt", "ISO8601" ]
    target => "prospect_createdAt"
  }
  
  date {
    match => [ "prospect_updatedAt", "ISO8601" ]
    target => "prospect_updatedAt"
  }
  
  date {
    match => [ "last_updated", "ISO8601" ]
    target => "last_updated"
  }
  
  # Transform data
  mutate {
    # Convert numeric fields
    convert => { 
      "revenue" => "integer"
      "minemployeesize" => "integer"
      "maxemployeesize" => "integer"
      "company_id" => "string"
      "prospect_id" => "string"
    }
    
    # Add computed fields for search optimization
    add_field => { 
      "company_size" => "%{minemployeesize}-%{maxemployeesize}"
      "search_text" => "%{company_name} %{industry} %{fullname} %{email} %{jobtitle}"
    }
  }
  
  # Add search suggestions
  mutate {
    add_field => { 
      "company_suggest" => "%{company_name}"
      "prospect_suggest" => "%{fullname}"
      "job_title_suggest" => "%{jobTitle}"
    }
  }
}

output {
  elasticsearch {
    hosts => ["${ELASTICSEARCH_HOST:-hailmary-elasticsearch}:${ELASTICSEARCH_PORT:-9200}"]
    index => "company_prospect_view"
    document_id => "%{company_id}|%{prospect_id}"
    
    # Authentication
    user => "${ELASTICSEARCH_USERNAME:-}"
    password => "${ELASTICSEARCH_PASSWORD:-}"
    
    # SSL settings
    ssl => "${ELASTICSEARCH_USE_SSL:-false}"
    ssl_certificate_verification => "${ELASTICSEARCH_VERIFY_CERTS:-false}"
    
    # Template settings
    template_name => "company_prospect_view"
    template => "/usr/share/logstash/config/templates/company_prospect.json"
    template_overwrite => true
  }
  
  # Debug output (remove in production)
  stdout {
    codec => rubydebug
  }
}
