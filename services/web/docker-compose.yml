# Web Service Docker Compose Configuration
# Next.js web application with service dependencies

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SCHEMA_VERSION: ${SCHEMA_VERSION:-latest}
        SCHEMA_API_URL: ${SCHEMA_API_URL:-http://schema-api:3001}
    container_name: hailmary-web
    environment:
      # Application Configuration
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${WEB_PORT:-3000}
      HOSTNAME: "0.0.0.0"
      
      # Database Configuration
      DATABASE_URL: ${DATABASE_URL:-postgresql://app:app@postgres:5432/app}
      
      # Elasticsearch Configuration
      ELASTICSEARCH_URL: ${ELASTICSEARCH_URL:-http://elasticsearch:9200}
      ELASTICSEARCH_INDEX: ${ELASTICSEARCH_INDEX:-company_prospect_view}
      
      # Redis Configuration
      REDIS_URL: ${REDIS_URL:-redis://redis:6389}
      
      # Schema Service Configuration
      SCHEMA_VERSION: ${SCHEMA_VERSION:-latest}
      SCHEMA_API_URL: ${SCHEMA_API_URL:-http://schema-api:3001}
      
      # Authentication Configuration
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET:-your-secret-key}
      NEXTAUTH_URL: ${NEXTAUTH_URL:-http://localhost:3000}
      
      # Timezone
      TZ: ${TZ:-UTC}
      
    ports:
      - "${WEB_PORT:-3000}:3000"
      
    volumes:
      # Application logs
      - web_logs:/app/logs
      
      # Schema files (mounted from local directory)
      - ./data/schema:/app/data/schema:ro
      
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
      
    # Dependencies are managed by the start script
    # depends_on:
    #   postgres:
    #     condition: service_healthy
    #   elasticsearch:
    #     condition: service_healthy
    #   redis:
    #     condition: service_healthy
        
    networks:
      - hailmary-network
      
    restart: unless-stopped
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  # Schema client updater service - updates schema client from Schema API
  schema-updater:
    image: node:18-slim
    container_name: hailmary-web-schema-updater
    environment:
      # Schema service configuration
      SCHEMA_VERSION: ${SCHEMA_VERSION:-latest}
      SCHEMA_API_URL: ${SCHEMA_API_URL:-http://schema-api:3001}
      
    volumes:
      # Schema files
      - schema_data:/app/data/schema
      
      # Schema pulling script
      - ./scripts:/usr/local/bin:ro
      
    command: >
      sh -c "
        echo 'ðŸ“¥ Pulling latest schema from Schema API...' &&
        /usr/local/bin/pull-schema.sh ${SCHEMA_VERSION:-latest} &&
        echo 'âœ… Schema updated successfully'
      "
      
    networks:
      - hailmary-network
      
    restart: "no"  # Run once and exit
    profiles:
      - schema-update  # Only start with --profile schema-update

volumes:
  web_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${WEB_LOGS_PATH:-./logs/web}
      
  schema_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${SCHEMA_DATA_PATH:-./data/schema}

networks:
  hailmary-network:
    external: true
    name: hailmary-network
