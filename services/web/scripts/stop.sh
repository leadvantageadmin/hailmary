#!/bin/bash
set -e

# Web Service Stop Script
# Stops the Next.js web application

# Show usage if no arguments provided
show_usage() {
    echo "Usage: $0 [local|vm]"
    echo ""
    echo "Modes:"
    echo "  local    - Local development mode (default)"
    echo "  vm       - VM/production mode"
    echo ""
    echo "Examples:"
    echo "  $0 local    # Stop in local mode"
    echo "  $0 vm       # Stop in VM mode"
    echo "  $0          # Stop in local mode (default)"
    exit 1
}

# Parse arguments
DEPLOYMENT_MODE=${1:-local}

if [[ "$DEPLOYMENT_MODE" != "local" && "$DEPLOYMENT_MODE" != "vm" ]]; then
    echo "‚ùå Invalid deployment mode: $DEPLOYMENT_MODE"
    show_usage
fi

echo "üõë Stopping HailMary Web Service ($DEPLOYMENT_MODE mode)"
echo "====================================================="

# Get the directory of this script
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
SERVICE_DIR="$(dirname "$SCRIPT_DIR")"

# Change to service directory
cd "$SERVICE_DIR"

# Load environment variables if .env file exists
if [ -f ".env" ]; then
    echo "üìã Loading environment variables from .env file..."
    export $(cat .env | grep -v '^#' | xargs)
fi

# Stop the web service
echo "üåê Stopping web application..."
if [ "$DEPLOYMENT_MODE" = "vm" ]; then
    echo "üîß Stopping nginx configuration for VM deployment..."
    docker compose -f docker-compose.vm.yml down
else
    echo "üîß Stopping standard configuration for local development..."
    docker compose down
fi

# Display service information
echo ""
echo "‚úÖ Web Service stopped successfully!"
echo ""
echo "üìã Service Status:"
echo "   ‚Ä¢ Web application: Stopped"
echo "   ‚Ä¢ Container: Removed"
echo "   ‚Ä¢ Network: Preserved (hailmary-network)"
echo "   ‚Ä¢ Deployment Mode: $DEPLOYMENT_MODE"
echo ""
echo "üîß Management Commands:"
echo "   ‚Ä¢ Start service: ./scripts/start.sh $DEPLOYMENT_MODE"
echo "   ‚Ä¢ Restart service: ./scripts/restart.sh $DEPLOYMENT_MODE"
echo "   ‚Ä¢ View logs: ./scripts/logs.sh $DEPLOYMENT_MODE"
